 <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Student Management Dashboard</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f4f4;
      margin: 0;
      padding: 20px;
    }

    h1 {
      text-align: center;
      color: #2c3e50;
    }

    .container {
      max-width: 1000px;
      margin: auto;
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    input, select, button {
      padding: 10px;
      margin: 5px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    th, td {
      padding: 10px;
      border-bottom: 1px solid #ddd;
      text-align: center;
    }

    th {
      background-color: #2c3e50;
      color: white;
    }

    .actions button {
      margin: 2px;
      padding: 5px 10px;
    }

    .search-box {
      float: right;
      margin-bottom: 10px;
    }

    .form-row {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
    }

    .form-row input, .form-row select {
      flex: 1;
      min-width: 150px;
    }

    @media (max-width: 600px) {
      .form-row {
        flex-direction: column;
      }
    }
  </style>
</head>
<body>

<div class="container">
  <h1>Student Management Dashboard</h1>

  <div class="form-row">
    <input type="text" id="name" placeholder="Student Name" required>
    <input type="text" id="reg" placeholder="Reg. Number" required>
    <input type="text" id="dept" placeholder="Department" required>
    <select id="year">
      <option value="">Select Year</option>
      <option value="1st">1st Year</option>
      <option value="2nd">2nd Year</option>
      <option value="3rd">3rd Year</option>
      <option value="4th">4th Year</option>
    </select>
    <input type="number" id="marks" placeholder="Marks" required>
    <button onclick="addStudent()">Add Student</button>
  </div>

  <div class="search-box">
    <input type="text" id="search" placeholder="Search by name..." onkeyup="filterStudents()">
  </div>

  <table id="studentTable">
    <thead>
      <tr>
        <th>Name</th>
        <th>Reg No</th>
        <th>Dept</th>
        <th>Year</th>
        <th>Marks</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody id="tableBody">
      <!-- Dynamic rows here -->
    </tbody>
  </table>
</div>

<script>
  let students = JSON.parse(localStorage.getItem('students')) || [];
  let editingIndex = -1;

  function saveData() {
    localStorage.setItem('students', JSON.stringify(students));
  }

  function renderTable() {
    const table = document.getElementById('tableBody');
    table.innerHTML = '';
    students.forEach((student, index) => {
      const row = `
        <tr>
          <td>${student.name}</td>
          <td>${student.reg}</td>
          <td>${student.dept}</td>
          <td>${student.year}</td>
          <td>${student.marks}</td>
          <td class="actions">
            <button onclick="editStudent(${index})">Edit</button>
            <button onclick="deleteStudent(${index})">Delete</button>
          </td>
        </tr>`;
      table.innerHTML += row;
    });
  }

  function addStudent() {
    const name = document.getElementById('name').value.trim();
    const reg = document.getElementById('reg').value.trim();
    const dept = document.getElementById('dept').value.trim();
    const year = document.getElementById('year').value;
    const marks = document.getElementById('marks').value;

    if (!name || !reg || !dept || !year || !marks) {
      alert("Please fill all fields!");
      return;
    }

    const newStudent = { name, reg, dept, year, marks };

    if (editingIndex >= 0) {
      students[editingIndex] = newStudent;
      editingIndex = -1;
    } else {
      students.push(newStudent);
    }

    saveData();
    renderTable();
    clearForm();
  }

  function deleteStudent(index) {
    if (confirm("Are you sure to delete this record?")) {
      students.splice(index, 1);
      saveData();
      renderTable();
    }
  }

  function editStudent(index) {
    const student = students[index];
    document.getElementById('name').value = student.name;
    document.getElementById('reg').value = student.reg;
    document.getElementById('dept').value = student.dept;
    document.getElementById('year').value = student.year;
    document.getElementById('marks').value = student.marks;
    editingIndex = index;
  }

  function clearForm() {
    document.getElementById('name').value = '';
    document.getElementById('reg').value = '';
    document.getElementById('dept').value = '';
    document.getElementById('year').value = '';
    document.getElementById('marks').value = '';
  }

  function filterStudents() {
    const query = document.getElementById('search').value.toLowerCase();
    const rows = document.querySelectorAll('#tableBody tr');
    rows.forEach(row => {
      const name = row.cells[0].textContent.toLowerCase();
      row.style.display = name.includes(query) ? '' : 'none';
    });
  }

  // Initial render
  renderTable();
</script>

</body>
</html>
